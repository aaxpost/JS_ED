
№1⊗jsPmPrEChT
Дан массив. Выведите его элементы в виде списка ul.
№2⊗jsPmPrEChT
Модифицируйте предыдущую задачу так, чтобы по клику на любую li в ней появлялся инпут, с помощью которого ее можно будет поредактировать.
№3⊗jsPmPrEChT
Модифицируйте предыдущую задачу так, чтобы под списком был инпут, с помощью которого можно будет добавить новый элемент в конец списка ul. Сделайте так, чтобы новые li также можно было редактировать.
№4⊗jsPmPrEChT
Модифицируйте предыдущую задачу так, чтобы в конце каждой li стояла ссылка 'удалить', с помощью которой можно будет удалить эту li из ul.
№5⊗jsPmPrEChT
Модифицируйте предыдущую задачу так, чтобы в конце каждой li также стояла ссылка 'перечеркнуть', с помощью которой можно будет перечеркнуть текст данного тега li.
"use strict";

function func () {
    let input = document.createElement('input');
    input.value = this.innerText;
    this.innerText = '';
    this.appendChild(input);
    this.removeEventListener('click', func);
    let li = this;
    input.addEventListener('blur', function () {
        li.innerText = input.value;
        li.addEventListener('click', func);
        this.remove();    
    });  
}

function liFunc (li) {
    let href = document.createElement('a');
    href.href = '#';
    href.innerText = 'del';
    href.addEventListener('click', function() {
        li.remove();
    });
    li.appendChild(href);

    let href2 = document.createElement('a');
    href2.href = '#';
    href2.innerText = 'del2';
    href2.addEventListener('click', function() {
        li.querySelector('span').classList.add('through');
    });
    li.appendChild(href2);
}

let arr = [1,2,3];
let parent = document.querySelector('#parent');
let ul = document.createElement('ul');
parent.appendChild(ul);

for (let elem of arr) {
    let li = document.createElement('li');
    li.innerHTML = '<span>'+ elem;

    liFunc (li);
    
    li.querySelector('span').addEventListener('click', func);
    ul.appendChild(li);
}
let input2 = document.createElement('input');
input2.addEventListener('blur', function () {
    let li = document.createElement('li');
    li.innerHTML = '<span>'+ input2.value;

    liFunc (li);
   
    li.querySelector('span').addEventListener('click', func);
    input2.value = '';
    ul.appendChild(li);
})
parent.appendChild(input2);







**********************************************************
⊗jsPmPrRET
Оберните сначала текст абзаца в теги span, добавьте к этим тегам возможность редактирования, а затем добавьте в конец каждого абзаца ссылку на удаление. 
"use strict";

let pars = document.querySelectorAll('p');

console.log(pars);
for (let par of pars) {
	let span = document.createElement('span');
	span.textContent = par.textContent;
	span.addEventListener('click', function func() {
		let input = document.createElement('input');
		input.value = span.textContent;
		span.textContent = '';
		span.appendChild(input);
		input.addEventListener('blur', function(){
			span.textContent = input.value;
			span.addEventListener('click', func);
		});
		span.removeEventListener('click', func);
	});

	par.textContent = '';
	par.appendChild(span);
	let hrRemove = document.createElement('a');
	hrRemove.href = '#';
	hrRemove.textContent = 'remove';
	
	par.appendChild(hrRemove);
	hrRemove.addEventListener('click', function() {
		par.remove();
	});	
};


Добавьте в конец каждого абзаца ссылку, по клику на которую текст абзаца будет перечеркиваться (а ссылка - нет). 
let pars = document.querySelectorAll('p');

console.log(pars);
for (let par of pars) {
	let span = document.createElement('span');
	span.textContent = par.textContent;
	span.addEventListener('click', function func() {
		let input = document.createElement('input');
		input.value = span.textContent;
		span.textContent = '';
		span.appendChild(input);
		input.addEventListener('blur', function(){
			span.textContent = input.value;
			span.addEventListener('click', func);
		});
		span.removeEventListener('click', func);
	});

	par.textContent = '';
	par.appendChild(span);
	let hrRemove = document.createElement('a');
	hrRemove.href = '#';
	hrRemove.textContent = 'decoration';
	
	par.appendChild(hrRemove);
	hrRemove.addEventListener('click', function() {
		span.classList.add("line");
	});	
};


Модифицируйте предыдущую задачу так, чтобы после нажатия на ссылку эта ссылка удалялась из абзаца (а текст абзаца становился перечеркнутым). 
"use strict";

let pars = document.querySelectorAll('p');

console.log(pars);
for (let par of pars) {
	let span = document.createElement('span');
	span.textContent = par.textContent;
	span.addEventListener('click', function func() {
		let input = document.createElement('input');
		input.value = span.textContent;
		span.textContent = '';
		span.appendChild(input);
		input.addEventListener('blur', function(){
			span.textContent = input.value;
			span.addEventListener('click', func);
		});
		span.removeEventListener('click', func);
	});

	par.textContent = '';
	par.appendChild(span);
	let hrRemove = document.createElement('a');
	hrRemove.href = '#';
	hrRemove.textContent = 'decoration';
	
	par.appendChild(hrRemove);
	hrRemove.addEventListener('click', function() {
		span.classList.add("line");
		hrRemove.remove();
	});	
};

Модифицируйте предыдущую задачу так, чтобы первое нажатие по ссылке красило ряд в зеленый фон, а второе нажатие отменяло это действие.
"use strict";

let trs = document.querySelectorAll('table tr');

for (let tr of trs) {
	let td = document.createElement('td');
	let hr = document.createElement('a');
	hr.addEventListener('click', function() {
		tr.classList.toggle("green");
		});
	hr.href = '#';
	hr.textContent = 'decoration';
	td.appendChild(hr);
	tr.appendChild(td);
};


*************************************************************************************************************
// №6 ⊗jsPmPrEChT Дан следующий массив с работниками:
//Выведите этих работников в HTML таблице. 
// №7⊗jsPmPrEChT Добавьте ячейкам созданной таблицы возможность редактирования.
// №8⊗jsPmPrEChT Добавьте в вашу таблицу новую колонку со ссылкой на удаления ряда из таблицы.
// №9⊗jsPmPrEChT Сделайте под таблицей 3 инпута и кнопку для добавление нового работника. Пусть в инпуты вводятся имя, возраст и зарплата, и по нажатию на кнопку новый работник добавляется в таблицу. Реализуйте редактирование ячеек для вновь добавленных работников.
let employees = [
	{name: 'employee1', age: 30, salary: 400},
	{name: 'employee2', age: 31, salary: 500},
	{name: 'employee3', age: 32, salary: 600},
];

function func () {
    let input = document.createElement('input');
    input.value = this.innerText;
    this.innerText = '';
    this.appendChild(input);
    this.removeEventListener('click', func);
    let li = this;
    input.addEventListener('blur', function () {
        li.innerText = input.value;
        li.addEventListener('click', func);
        this.remove();    
    });  
}

function addElemDel (parent, elem) {
    let href = document.createElement('a');
    href.href = '#';
    href.innerText = 'del';
    href.addEventListener('click', function() {
        parent.remove();
    });
    elem.appendChild(href);
}

let parent = document.querySelector('#parent');
let table = document.createElement('table');
let tr = document.createElement('tr');
	 for (let key in employees[0]) {
			let th = document.createElement('th');
			th.innerText = key;
			tr.appendChild(th);
	 }
table.appendChild(tr);
for (let employee of employees) {
	let tr = document.createElement('tr');
	 for (let key in employee) {
		let th = document.createElement('th');
		th.innerText = employee[key];
		th.addEventListener('click', func);
		tr.appendChild(th);
	 }
	 let th = document.createElement('th');
	 addElemDel (tr, th);
	 tr.appendChild(th);
	 table.appendChild(tr);
}
parent.appendChild(table);

let button = document.querySelector('button');
let inputName = document.querySelector('#name');
let inputAge = document.querySelector('#age');
let inputSalary = document.querySelector('#salary');
button.addEventListener('click', function() {
	let tr = document.createElement('tr');
	let thName = document.createElement('th');
	thName.innerText = inputName.value;
	thName.addEventListener('click', func);
	tr.appendChild(thName);
	let thAge = document.createElement('th');
	thAge.innerText = inputAge.value;
	thAge.addEventListener('click', func);
	tr.appendChild(thAge);
	let thSalary = document.createElement('th');
	thSalary.innerText = inputSalary.value;
	thSalary.addEventListener('click', func);
	tr.appendChild(thSalary);
	let thDel = document.createElement('th');
	addElemDel (tr, thDel);
	tr.appendChild(thDel);
	table.appendChild(tr);
});

***********************************************************************************************************************************
'use strict'
Практика на изменение элементов на JavaScript
//  №10⊗jsPmPrEChT Дан следующий массив с работниками: 
// Выведите на экран каждого работника в своем теге li тега ul.
//№11⊗jsPmPrEChT Сделайте так, чтобы по клику на имя, возраст или зарплату работника появлялся инпут для редактирования этого поля.
// №12⊗jsPmPrEChT Добавьте в конец каждого тега li ссылку на удаление этого li из списка.
// №13⊗jsPmPrEChT Под списком сделайте форму для добавления нового работника.

let employees = [
	{name: 'employee1', age: 30, salary: 400},
	{name: 'employee2', age: 31, salary: 500},
	{name: 'employee3', age: 32, salary: 600},
];

function func () {
    let input = document.createElement('input');
    input.value = this.innerText;
    this.innerText = '';
    this.appendChild(input);
    this.removeEventListener('click', func);
    let item = this;
    input.addEventListener('blur', function () {
        item.innerText = input.value;
        item.addEventListener('click', func);
        this.remove();    
    });  
}

function addElemDel (parent, elem) {
    let href = document.createElement('a');
    href.href = '#';
    href.innerText = 'del';
    href.addEventListener('click', function() {
        parent.remove();
    });
    elem.appendChild(href);
}

function createElLi (obj, ul, addElemDel) {
	let li = document.createElement('li');
	for (let key in obj) {
		let pKey = document.createElement('span');
		pKey.innerText = "  " + key + ': ';
		li.appendChild(pKey);
		let span = document.createElement('span');
		span.innerText = obj[key];
		span.addEventListener('click', func);
		li.appendChild(span);	
	}
	addElemDel(li, li);
	return ul.appendChild(li);
}

let parent = document.querySelector('#parent');
let ul = document.createElement('ul');
for (let employee of employees) {
	createElLi (employee, ul, addElemDel);
}
parent.appendChild(ul);

let button = document.querySelector('button');
let inputName = document.querySelector('#name');
let inputAge = document.querySelector('#age');
let inputSalary = document.querySelector('#salary');
let newEmployee = {name: inputName.value, age: inputAge.value, salary: inputSalary.value};
button.addEventListener('click', function() {
	createElLi (newEmployee, ul, addElemDel);
});


************************************************************************************************
//Игра угадай ячейку на JavaScript

<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8">
		<title></title>
		<link rel="stylesheet" href="styles.css">
	</head>
	<body>
		<div id="parent">
			<input class="btn" type="button" value='START'>
			<p class="result"></p>
		</div>
		
		
		
		<script src="script.js?v=5"></script>
	</body>
</html>
'use strict'
function getRandomInt(max) {
	return Math.floor(Math.random() * max);
}

function getRandomArr(max) {
	let arr = [];
	for (let i = 1; arr.length < max; i++) {
		let newElem = getRandomInt(max);
		if (arr.includes(newElem) == false) {
			arr.push(newElem)
		}
	}
	return arr;		
}

let arr_100 = getRandomArr(100);
let arr_10 = getRandomArr(10);

let shuffle = [];
for (let elem of arr_100) {
	if (arr_10.includes(elem)) {
		shuffle.push('mem');
	} else {
		shuffle.push('zero');
	}
}

let btn = document.querySelector('.btn');
btn.addEventListener('click', function () {
	let k = 0;
	let p = document.querySelector('.result');
	let timerId = setInterval(function() {
	p.textContent = ++k;
	if (k >= 30) {
		clearInterval(timerId);
	}
	}, 1000);
		
	let parent = document.querySelector('#parent');
	let table = document.createElement('table');
	for (let i = 1; i < 11; i++) {
		let tr = document.createElement('tr');
		for (let j = 1; j < 11; j++) {
			let th = document.createElement('th');
			th.classList.add(shuffle.shift());
			th.addEventListener('click', function funcMem() {
				if (this.classList.contains('mem') && k < 30) {
					this.classList.add('true');
				}
				if (this.classList.contains('zero') && k < 30) {
					this.classList.add('error');
				}
			});
			th.textContent = '';
			tr.appendChild(th);
		}
		table.appendChild(tr);
	}
	parent.appendChild(table);
});

********************************************************************************************************************
Экранная клавиатура на JavaScript
'use strict'

let parent = document.querySelector('#parent');
let input_print = document.createElement('input');
input_print.type = "text";
parent.appendChild(input_print);

let div = document.createElement('div');
let caps = document.createElement('input');
caps.type = 'button';
caps.value = 'caps';
caps.addEventListener('click', function () {
	caps.classList.toggle("caps");
});
div.appendChild(caps);

for (let i = 0; i <= 9; i++) {
	let input = document.createElement('input');
	input.type = 'button';
	input.classList = 'class_' + i;
	input.value = i;
	input.addEventListener('click', function () {
		input_print.value += input.value;
	});
	div.appendChild(input);
}
let br = document.createElement('br');
div.appendChild(br);

let arr = [ 'а', 'б', 'в', 'г', 'д', 'е', 'ё', 'ж', 'з', 'и', 'й', 'к', 'л', 'м', 'н', 'о', 'п', 'р', 'с', 'т', 'у', 'ф', 'х', 'ц', 'ч', 'ш', 'щ', 'ъ', 'ы', 'ь', 'э', 'ю', 'я'];
for (let elem of arr) {
	let input = document.createElement('input');
	input.type = 'button';
	input.classList = 'class_' + elem;
	input.value = elem;
	input.addEventListener('click', function () {
		if (caps.classList.contains("caps")) {
			input_print.value += input.value.toUpperCase();
		} else {
			input_print.value += input.value;
		}
		
	});
	div.appendChild(input);
}

parent.appendChild(div);


*****************************************************************************************************************
//Расширенная версия линейного календаря
//Хочу сократить код
'use strict'
let parent = document.querySelector('#parent');
let todayDate = new Date();
let flug;
let input_1 = document.createElement('input');
input_1.type = 'button';
input_1.classList = 'class_left';
input_1.value = '<<';
input_1.addEventListener('click', function () {
	let oldUl = document.querySelector('ul');
	parent.removeChild(oldUl);
	let flug = true;
	//console.log(flug);
	if (flug == true) {
		todayDate = new Date(todayDate.getFullYear(), todayDate.getMonth() - 1);
		console.log(todayDate.getFullYear());
		let pYear = document.querySelector('p');
		pYear.textContent = todayDate.getFullYear();
		let arrMonth = ['январь', 'февраль', 'март', 'апрель', 'май', 'июнь', 'июль', 'август', 'сентябрь', 'октябрь', 'ноябрь', 'декабрь'];
		let pMonth = document.querySelector('.month');
		pMonth.textContent = arrMonth[todayDate.getMonth()];
		let ul = document.createElement('ul');
		let lengthMonth = new Date(
			todayDate.getFullYear(),
			todayDate.getMonth(), 0).getDate();
		console.log(lengthMonth);
		for (let i = 1; i <= lengthMonth; i++) {
			let li = document.createElement('li');
			li.textContent = i + '; ';
			if (todayDate.getDate() == i) {
				li.classList.add('today');
			}
			
			ul.appendChild(li);
		}
		parent.appendChild(ul);
		
	}
});
parent.appendChild(input_1);
let input_2 = document.createElement('input');
input_2.type = 'button';
input_2.classList = 'class_right';
input_2.value = '>>';
input_2.addEventListener('click', function () {
	let oldUl = document.querySelector('ul');
	parent.removeChild(oldUl);
	let flug = true;
	//console.log(flug);
	if (flug == true) {
		todayDate = new Date(todayDate.getFullYear(), todayDate.getMonth() + 1);
		console.log(todayDate.getFullYear());
		let pYear = document.querySelector('p');
		pYear.textContent = todayDate.getFullYear();
		let arrMonth = ['январь', 'февраль', 'март', 'апрель', 'май', 'июнь', 'июль', 'август', 'сентябрь', 'октябрь', 'ноябрь', 'декабрь'];
		let pMonth = document.querySelector('.month');
		pMonth.textContent = arrMonth[todayDate.getMonth()];
		let ul = document.createElement('ul');
		let lengthMonth = new Date(
			todayDate.getFullYear(),
			todayDate.getMonth(), 0).getDate();
		console.log(lengthMonth);
		for (let i = 1; i <= lengthMonth; i++) {
			let li = document.createElement('li');
			li.textContent = i + '; ';
			if (todayDate.getDate() == i) {
				li.classList.add('today');
			}
			
			ul.appendChild(li);
		}
		parent.appendChild(ul);
		
	}
});
parent.appendChild(input_2);


if (flug != true) {
	let pYear = document.createElement('p');
	pYear.textContent = todayDate.getFullYear();
	parent.appendChild(pYear);
	let arrMonth = ['январь', 'февраль', 'март', 'апрель', 'май', 'июнь', 'июль', 'август', 'сентябрь', 'октябрь', 'ноябрь', 'декабрь'];
	let pMonth = document.createElement('p');
	pMonth.classList.add('month');
	pMonth.textContent = arrMonth[todayDate.getMonth()];
	console.log(todayDate.getMonth());
	parent.appendChild(pMonth);
	let ul = document.createElement('ul');
	let lengthMonth = new Date(
		todayDate.getFullYear(),
		todayDate.getMonth(), 0).getDate();
	console.log(lengthMonth);

	for (let i = 1; i <= lengthMonth; i++) {
		let li = document.createElement('li');
		li.textContent = i + '; ';
		if (todayDate.getDate() == i) {
			li.classList.add('today');
		}
		ul.appendChild(li);
	}
	parent.appendChild(ul);
}

*******************************************************************************************************************
//Линейный календарь сокращенная версия
//⊗jsPrStLC
'use strict'
//Формирую список дней по длине месяца
function createArrDate(todayDate) {
	let ul = document.createElement('ul');
	let lengthMonth = new Date(
		todayDate.getFullYear(),
		todayDate.getMonth(), 0).getDate();
	console.log(lengthMonth);

	for (let i = 1; i <= lengthMonth; i++) {
		let li = document.createElement('li');
		li.textContent = i + '; ';
		if (todayDate.getDate() == i) {
			li.classList.add('today');
		}
		ul.appendChild(li);	
	}
	return ul;
}
//Изменяю год и месяц
function changeYearMonth(parent, createArrDate, i) {
	let oldUl = document.querySelector('ul');
	parent.removeChild(oldUl);
	let flag = true;
	if (flag == true) {
		if (i == 0) {
			todayDate = new Date(todayDate.getFullYear(), todayDate.getMonth() - 1);
		}
		if (i == 1) {
			todayDate = new Date(todayDate.getFullYear(), todayDate.getMonth() + 1);
		}
		let pYear = document.querySelector('p');
		pYear.textContent = todayDate.getFullYear();
		let pMonth = document.querySelector('.month');
		pMonth.textContent = arrMonth[todayDate.getMonth()];
		parent.appendChild(createArrDate(todayDate));	
	}
}
//Массив месяцев
let arrMonth = ['январь', 'февраль', 'март', 'апрель', 'май', 'июнь', 'июль', 'август', 'сентябрь', 'октябрь', 'ноябрь', 'декабрь'];
let parent = document.querySelector('#parent');
let todayDate = new Date();
let flag;
let input_1 = document.createElement('input');
input_1.type = 'button';
input_1.classList = 'class_left';
input_1.value = '<<';
input_1.addEventListener('click', function () {
	changeYearMonth(parent, createArrDate, 0);
});
parent.appendChild(input_1);
let input_2 = document.createElement('input');
input_2.type = 'button';
input_2.classList = 'class_right';
input_2.value = '>>';
input_2.addEventListener('click', function () {
	changeYearMonth(parent, createArrDate, 1);
});
parent.appendChild(input_2);
//Вывожу текущий месяц
if (flag != true) {
	let pYear = document.createElement('p');
	pYear.textContent = todayDate.getFullYear();
	parent.appendChild(pYear);
	let pMonth = document.createElement('p');
	pMonth.classList.add('month');
	pMonth.textContent = arrMonth[todayDate.getMonth()];
	parent.appendChild(pMonth);
	parent.appendChild(createArrDate(new Date()));
}

*******************************************************************************************************************
Поиск исторических события на JavaScript

Пусть мы хотим написать сайт, показывающий таблицу исторических событий за определенный год. Пусть год будет вводится в инпут.
По нажатию Enter давайте выведем таблицу событий, случившихся в этот год. Пусть в качестве информации о событии мы хотим видеть дату, 
название и описание события. Давайте я покажу вам образец того, что должно получится (для простоты я сделал события за 2000, 2001 и 2002 годы): 
<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8">
		<title></title>
		<link rel="stylesheet" href="styles.css">
	</head>
	<body>
		<div id="parent">
			<input id="input" placeholder="введите год и нажмите Enter">
			<table id="table"></table>
			<p></p>
		</div>
		<script src="script.js?v=5"></script>
	</body>
</html>




'use strict'

let parent = document.querySelector('#parent');
let table = document.querySelector('#table');
let input = document.querySelector('#input');
let p = document.querySelector('p');

let obj = {
	'2001':  [['01.03.2001', 'событие 1', 'описание события 1'],
			['01.03.2001', 'событие 1', 'описание события 1'],
			['01.03.2001', 'событие 1', 'описание события 1']],
	'2002':  [['01.03.2002', 'событие 1', 'описание события 1'],
			['01.03.2002', 'событие 1', 'описание события 1'],
			['01.03.2002', 'событие 1', 'описание события 1']],
	'2003':  [['01.03.2003', 'событие 1', 'описание события 1'],
			['01.03.2003', 'событие 1', 'описание события 1'],
			['01.03.2003', 'событие 1', 'описание события 1']],
}

input.addEventListener('keydown', function(event) {
	if (event.key == 'Enter') {
		let arrTr = document.querySelectorAll('tr');
		for (let tr of arrTr) {
			table.removeChild(tr);
		}
		let year = input.value;
		if (year in obj) {
			
			for (let events of obj[year]) {
				let tr = document.createElement('tr');
				for (let event of  events) {
						let td = document.createElement('td');
						td.textContent = event;
						tr.appendChild(td)
				}
				table.appendChild(tr);
			}
			p.innerText = '';
		} else {
			p.innerText = 'такой даты нет';
		}
	}
});



************************************************************************************************
Сайт предсказаний на JavaScript
Сейчас мы сделаем сайт, который будет выдавать предсказания. Пусть на этом сайте будет кнопка, по нажатию на которую будет запускаться таймер, который будет каждые 0.1 секунд выводить в в какой-нибудь див случайное число от 1 до некоторого максимального.
Под дивом пусть будет другая кнопка, по нажатию на которую пользователь нашего сайта может остановить таймер и зафиксировать некоторое число в диве. Это число будет номером предсказания. После этого покажите пользователю предсказание с этим номером, а все лишние кнопки уберите с экрана, чтобы пользователь не мог получить еще одно предсказание. То есть на один заход на сайт - одно предсказание.
Вот образец того, что должно получится:

"use strict";

let timerDiv = document.querySelector('#timer');
let textDiv = document.querySelector('#text');
let startButton = document.querySelector('#start');
let stopButton = document.querySelector('#stop');
let prediction = {
    '1': '1 хорошее предсказание',
    '2': '2 плохое предсказание',
    '3': '3 хорошее предсказание',
    '4': '4  плохое предсказание',
    '5': '5 предсказание',
    '6': '6 предсказание',
    '7': '7 предсказание',
    '8': '8 предсказание',
    '9': '9 предсказание',
    '10': '10 предсказание',
}

startButton.addEventListener('click', function func1() {
    startButton.classList.remove('active');
    stopButton.classList.add('active');
    let i = 1;
    let timerId = setInterval(function() {
        if (i < 10) {
            timerDiv.textContent = ++i;
            stopButton.addEventListener('click', function func2() {
                textDiv.textContent = prediction[i];
                if (i % 2 == 0) {
                    textDiv.classList.add('bad');
                } else {
                    textDiv.classList.add('good');
                }
                stopButton.classList.remove('active');
                clearInterval(timerId);
                timerDiv.textContent = i;
                startButton.removeEventListener('click', func1);  
            });
        } else {
            i = 1;
        }  
    }, 100);
    startButton.removeEventListener('click', func1);
});

*****************************************************************************************************
Спойлер на JavaScript
Сейчас мы научимся делать спойлеры. Под спойлерами я понимаю блоки, которые можно развернуть, либо свернуть с помощью специальной ссылки.
В следующем примере кода абзац с классом spoiler является спойлером, а ссылка с классом toggle должна по клику показывать или скрывать этот спойлер: 


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <p>
        абзац с текстом
    </p>
    <p>
        абзац с текстом
        <a href="#" class="toggle">развернуть спойлер 1</a>
    </p>
    <p class="spoiler">
        скрытый спойлер 1
    </p>
    <p>
        абзац с текстом
    </p>
    <p>
        абзац с текстом
        <a href="#" class="toggle">развернуть спойлер 2</a>
    </p>
    <p class="spoiler">
        скрытый спойлер 2
    </p>
    <p>
        абзац с текстом
    </p>
    <script src="script.js"></script>   
</body>
</html>

///////////////////////////////////////////////////////////////
"use strict";

let toggleArr = document.querySelectorAll('.toggle');

for (let elem of toggleArr) {
    elem.addEventListener('click', function() {
        let parent = elem.parentElement;
        let nextNode = parent.nextElementSibling;
        nextNode.classList.toggle('active');
    });
}

********************************************************************************************************
Автодополнение на JavaScript
Сейчас мы реализуем автодополнение. Под этим термином понимается выпадающая подсказка при вводе текста в инпут. Давайте посмотрим на примере. Ниже я сделал инпут, в который можно ввести название страны. При этом, если ввести какие-то буквы, то под инпутом появится список стран, которые начинаются на введенную строку.
При желании можно, чтобы не вводить целиком имя страны, кликнуть мышкой на любую страну и она появится в инпуте. Для этого, в общем-то, автодополнение и нужно. В примере для простоты я сделал только три страны: Belarus, Belgium и Bulgaria. Введите в приведенный ниже инпут сначала символ 'В' английское, а потом 'e' и посмотрите, что будет: 

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div id="parent">
        <input id="elem">
        <ul id="list"></ul>
    </div>
    text text text text text
</body>
<script src="script.js?v=2"></script>
</html>

/////////////////////////
"use strict";

let arr  = ['Belarus', 'Belgium', 'Bulgaria'];
let elem = document.querySelector('#elem');
let list = document.querySelector('#list');

elem.addEventListener('keyup', function func() {
    list.innerHTML = "";
    let arrList = arr.filter(function(str) { 
        if (str.startsWith(elem.value)) {
            return true;  
        } else {
            return false;
        }	
    });

    let str = elem.value;
    if (str.length > 0) {
        for (let liText of arrList) {       
            let li = document.createElement('li');
            li.textContent = liText;
            li.addEventListener('click', function() {
                elem.value = liText;
                list.innerHTML = "";
            });
            list.appendChild(li);
        }
    }
});

***********************************************************************************
Вкладки на JavaScript
Сейчас мы реализуем вкладки. Сразу посмотрите на образец того, что от вас требуется:

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div id="parent">
        <div class="menu">
            <a href="#" class="active">вкладка 1</a>
            <a href="#">вкладка 2</a>
            <a href="#">вкладка 3</a>
        </div>
        <div class="tabs">
            <div class="tab active">
                текст вкладки 1
            </div>
            <div class="tab">
                текст вкладки 2
            </div>
            <div class="tab">
                текст вкладки 3
            </div>
        </div>
    </div>
    
    <script src="script.js"></script>   
</body>
</html>

//////////////////////////////////////////////////////
let parent = document.querySelector('#parent');
let arrHref = parent.querySelectorAll('.menu a');
let arrTabs = parent.querySelectorAll('.tabs .tab');

for (let i = 0; i < arrHref.length; i++) {
    arrHref[i].addEventListener('click', function() {
        arrHref[i].classList.add('active');
        arrTabs[i].classList.add('active');
        for (let key in arrHref) {
            if (key != i) {
                arrHref[key].classList.remove('active');
                arrTabs[key].classList.remove('active');
            }
        }  
    });
}

////////////////////////////////////////////////////
.menu a {
	margin-right: 5px;
	display: inline-block;
	padding: 10px;
	color: black;
	text-decoration: none;
	border: 1px solid gray;
}
.menu a:hover {
	background: #f8f8f8;
}
.menu a.active {
	border-color: transparent;
	background: #f2f2f2;
}

.tabs .tab:not(.active) {
	display: none;
}
.tabs .tab {
	padding: 10px;
	background: #f2f2f2;
	height: 300px;
}

*************************************************************
/////////////////////////////////////////////////////////////////////
Аккордеон на JavaScript

Давайте теперь реализуем аккордеон. Он похож на вкладки, перевернутые на бок. При этом в аккордеоне можно закрыть текущую вкладку, если нажать на активную ссылку.

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div id="parent">
        <div class="tab active">
            <div class="link">
                <a href="#" >вкладка 1</a>
            </div>
            <div class="text">
                текст вкладки 1
            </div>
        </div>
        <div class="tab">
            <div class="link">
                <a href="#" >вкладка 2</a>
            </div>
            <div class="text">
                текст вкладки 2
            </div>
        </div>
        <div class="tab">
            <div class="link">
                <a href="#" >вкладка 3</a>
            </div>
            <div class="text">
                текст вкладки 3
            </div>
        </div>
    </div>
    <script src="script.js"></script>   
</body>
</html>

********************

#parent {
	margin: 0 auto;
	width: 400px;
}
.tab {
	margin-bottom: 10px;
}

.tab .link a {
	display: block;
	padding: 10px;
	color: black;
	text-decoration: none;
	text-align: center;
	background: #f8f8f8;
	border: 1px solid gray;
}
.tab .link:hover a {
	background: #f2f2f2;
}

.tab:not(.active) .text {
	display: none;
}
.tab .text {
	border: 1px dashed gray;
	border-top: none;
	
	padding: 10px;
	height: 300px;
}

******************

"use strict";

let linkArr = document.querySelectorAll('.link');
let tabArr = document.querySelectorAll('.tab');


for (let link of linkArr) {
    link.addEventListener('click', function() {
        let parent = link.parentElement;
        if (parent.classList.contains('active')) {
            parent.classList.toggle('active');
        } else {
            for (let tab of tabArr) {
                if (tab.classList.contains('active')) {
                    tab.classList.remove('active');
                }
            }
            parent.classList.add('active');
        }
    });
}

////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
Аккордеон на JavaScript

Давайте теперь реализуем аккордеон. Он похож на вкладки, перевернутые на бок. При этом в аккордеоне можно закрыть текущую вкладку, если нажать на активную ссылку.

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div id="parent">
        <div class="tab active">
            <div class="link">
                <a href="#" >вкладка 1</a>
            </div>
            <div class="text">
                текст вкладки 1
            </div>
        </div>
        <div class="tab">
            <div class="link">
                <a href="#" >вкладка 2</a>
            </div>
            <div class="text">
                текст вкладки 2
            </div>
        </div>
        <div class="tab">
            <div class="link">
                <a href="#" >вкладка 3</a>
            </div>
            <div class="text">
                текст вкладки 3
            </div>
        </div>
    </div>
    <script src="script.js"></script>   
</body>
</html>

********************

#parent {
	margin: 0 auto;
	width: 400px;
}
.tab {
	margin-bottom: 10px;
}

.tab .link a {
	display: block;
	padding: 10px;
	color: black;
	text-decoration: none;
	text-align: center;
	background: #f8f8f8;
	border: 1px solid gray;
}
.tab .link:hover a {
	background: #f2f2f2;
}

.tab:not(.active) .text {
	display: none;
}
.tab .text {
	border: 1px dashed gray;
	border-top: none;
	
	padding: 10px;
	height: 300px;
}

******************

"use strict";

let linkArr = document.querySelectorAll('.link');
let tabArr = document.querySelectorAll('.tab');


for (let link of linkArr) {
    link.addEventListener('click', function() {
        let parent = link.parentElement;
        if (parent.classList.contains('active')) {
            parent.classList.toggle('active');
        } else {
            for (let tab of tabArr) {
                if (tab.classList.contains('active')) {
                    tab.classList.remove('active');
                }
            }
            parent.classList.add('active');
        }
    });
}

///////////////////////////////////////////////////////////
Игра в города против робота на JavaScript
///////////////////////////////////////////////////////////
"use strict";

let field   = document.querySelector('#field');
let message = document.querySelector('#message');

function getLastKey (word) {
   return word[word.length - 1]; 
	 }
//Преверяем, что элемент есть массиве			
function checkTown (arr, str) {
   return arr.every(function(elem) {
   if (elem != str) {
       return true;
       } else {
          return false;
       }
   });
}


let cities = [];
let allCities = ['qw', 'we', 'er', 'rt', 'ty', 'yu'];

field.addEventListener('keydown', function(event) {
	if (event.key == 'Enter') {
        let error = false;
        //Человек проверка существования города и что это первый город в игре
        let townIsset = allCities.includes(field.value);
        if (cities.length == 0 && townIsset == true) { 
            cities.push(field.value);
            message.textContent = "Succes. Next";
        } else {
            //В массиве больше одного элемента и город есть в массиве робота
            if (cities.length > 0 && townIsset == true) {
                //Город еще не использован в игре
                let check = cities.includes(field.value);
                let city = cities[cities.length - 1];
                if (field.value[0] == city[city.length - 1] && 
                    check != true) {
                    cities.push(field.value);
                    message.textContent = "Succes. Next";
                } else {
                    error = true;
                    message.textContent = "Последняя буква прошлого города не совпадает с первой введенного или такого города нет в базе";
                }     
            } 
        }
        ///Компьютер
      if (error != true) {
		    let lastKeyField = getLastKey(field.value);
            let flugNoCity = true;
		    for (let elem of allCities) {
					if (elem[0] ==  lastKeyField && checkTown (cities, elem) == true) {
                      cities.push(elem);
                      field.value = elem;
                      flugNoCity = false;
					}
			}
            if (flugNoCity == true) {
                message.textContent = "Ran out of cities";
            }
      } 
    console.log(cities);    
    }
});


///////////////////////////////////////////////////////////////////////////////////////////////////////////////
Калькулятор продуктов
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="style.css">
    
    <title>Document</title>
</head>
<body>
    <div id="parent">
        <div id="form">
            <input id="name" placeholder="название">
            <input id="price" placeholder="цена">
            <input id="amount" placeholder="количество">
            <input id="add" type="button" value="добавить">
        </div>
        
        <h2>Таблица продуктов:</h2>
        <table id="table">
            <tr>
                <th>название</th>
                <th>цена</th>
                <th>кол-во</th>
                <th>сумма</th>
                <th>удалить</th>
            </tr>
        </table>
        <div id="result">
            общий итог: <span id="total">0</span>
        </div>
    </div>


    <script src="script.js"></script>   
</body>
</html>

"use strict"

let name   = document.querySelector('#name');
let price  = document.querySelector('#price');
let amount = document.querySelector('#amount');
let add    = document.querySelector('#add');
let table  = document.querySelector('#table');
let total  = document.querySelector('#total');

function createCell(tr, value, name) {
	let td = document.createElement('td');
	td.textContent = value;
	td.classList.add(name);
	tr.appendChild(td);
    return td;
}

function recountTotal() {
	let costs = table.querySelectorAll('.cost');
	
	if (costs) {
		// находим сумму и записываем ее в #total
        let sum = 0;
        costs.forEach(function(elem) {
            sum += +elem.textContent;
        });
        total.textContent = sum;
	}
}

function allowEdit(td) {
	td.addEventListener('dblclick', function() {
		let inp = document.createElement('input');
        inp.value = td.textContent;
        td.textContent = "";
        td.appendChild(inp);
        inp.addEventListener('keydown', function(event) {
            if (event.key == 'Enter') {
                td.textContent = inp.value;
                if (td.classList.contains('price') || td.classList.contains('amount')) {
                    let priceTd = td.parentElement.querySelector('.price');
                    let amountTd = td.parentElement.querySelector('.amount');
                    let costTd = td.parentElement.querySelector('.cost');
                    costTd.textContent = priceTd.textContent * amountTd.textContent;
					recountTotal();
				}
            }
        });
	});
}

add.addEventListener('click', function() {
	let tr = document.createElement('tr');
	allowEdit(createCell(tr, name.value, 'name'));
    allowEdit(createCell(tr, price.value, 'price'));
    allowEdit(createCell(tr, amount.value, 'amount'));
	createCell(tr, price.value * amount.value, 'cost');
	createCell(tr, 'удалить', 'remove').addEventListener('click', function() {
        // удалим ряд таблицы
        this.parentElement.remove();
        recountTotal();
    });
	table.appendChild(tr);
    recountTotal(); // пересчитаем общую сумму
});


* {
	box-sizing: border-box;
}
#parent {
	margin: 0 auto;
	width: 500px;
}

#form {
	display: flex;
	margin-bottom: 15px;
}
#form input {
	padding: 8px;
	width: 24%;
	margin: 0 0.5% 10px 0.5%;
}

h2 {
	margin-top: 0;
	margin-bottom: 7px;
}

#table {
	width: 100%;
	margin-bottom: 10px;
}
#table td, #table th {
	padding: 8px;
	text-align: center;
	border: 1px solid black;
}
#table td.remove {
	color: blue;
	cursor: pointer;
	text-decoration: underline;
}
#table td.remove:hover {
	text-decoration: none;
}

#result {
	text-align: right;
	margin-right: 10px;
}


888888888888888888888888888888888888888888888888888888888888888888888888888888888
 №1⊗jsPrTstHQA
Сделайте так, чтобы ввод ответа в инпут завершался нажатием клавиши Enter. Пусть в этом случае инпут сразу проверяет ответ на правильность.
№2⊗jsPrTstHQA
Модифицируйте ваш код так, чтобы проверка ответов выполнялась по нажатию на кнопку.

"use strict"

let inputs   = document.querySelectorAll('input');
let button   = document.querySelector('button');
/*
inputs.forEach(function (inp) {
    inp.addEventListener('keydown', function(event) {
        if (event.key == 'Enter') {
            if (inp.dataset.right == inp.value) {
                inp.classList.add("right");
            } else {
                inp.classList.add("wrong");
            }
        }
    });   
});
*/

button.addEventListener('click', function() {
    inputs.forEach(function (inp) {
            if (inp.dataset.right == inp.value) {
                inp.classList.add("right");
            } else {
                inp.classList.add("wrong");
            }
        });   
});

999999999999999999999999999999999999999999999999999999999999999999999
 №1⊗jsPrTstQIA
Сделайте так, чтобы по нажатию на кнопку выполнилась проверка правильности ответов.
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div id="test">
        <div>
            <p>вопрос 1?</p>
            <input>
        </div>
        <div>
            <p>вопрос 2?</p>
            <input>
        </div>
        <div>
            <p>вопрос 3?</p>
            <input>
        </div>
        
        <button id="button">проверить ответы</button>
    </div>
    <script src="script.js"></script>
</body>
</html>

.right {
	border: 1px solid green;
}
.wrong {
	border: 1px solid red;
}

"use strict"

let answers = [
	1,
	2,
	3,
];

let inputs   = document.querySelectorAll('input');
let button   = document.querySelector('#button');

button.addEventListener('click', function() {
    inputs.forEach(function (inp, inpKey) {
            answers.forEach((answer, answerKey) => {
                if (answer == inp.value && inpKey == answerKey) {
                    console.log(answer);
                    inp.classList.add("right");
                }
                if (answer != inp.value && inpKey == answerKey) {
                    console.log(answer);
                    inp.classList.add("wrong");
                }
                });

            
        });   
});


===========================================================================================
32 Тест с вопросами и ответами в массиве на JavaScript
===========================================================================================
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div id="test"></div>
    <button id="button">проверить ответы</button>

    <!--
      <div id="test">
        <div>
            <p>вопрос 1?</p>
            <input>
        </div>
        <div>
            <p>вопрос 2?</p>
            <input>
        </div>
        <div>
            <p>вопрос 3?</p>
            <input>
        </div>
        
        <button id="button">проверить ответы</button>
    </div>  
    -->
    
    <script src="script.js"></script>
</body>
</html>


"use strict"
//32
let answers = [
	'ответ 1',
	'ответ 2',
	'ответ 3',
];

let questions = [
	'вопрос 1?',
	'вопрос 2?',
	'вопрос 3?'
];

let parentDiv   = document.querySelector('#test');
let button   = document.querySelector('#button');

questions.forEach(function func(elem) {
    let div = document.createElement('div');
    let p = document.createElement('p');
    p.textContent = elem;
    let input = document.createElement('input');
    div.appendChild(p);
    div.appendChild(input);
    
    parentDiv.appendChild(div);
});

let inputs   = document.querySelectorAll('input');

button.addEventListener('click', function() {
    inputs.forEach(function (inp, inpKey) {
            answers.forEach((answer, answerKey) => {
                if (answer == inp.value && inpKey == answerKey) {
                    console.log(answer);
                    inp.classList.add("right");
                }
                if (answer != inp.value && inpKey == answerKey) {
                    console.log(answer);
                    inp.classList.add("wrong");
                }
                });

            
        });   
});




//let inputs   = document.querySelectorAll('input');
//let button   = document.querySelector('#button');


/*

button.addEventListener('click', function() {
    inputs.forEach(function (inp, inpKey) {
            answers.forEach((answer, answerKey) => {
                if (answer == inp.value && inpKey == answerKey) {
                    console.log(answer);
                    inp.classList.add("right");
                }
                if (answer != inp.value && inpKey == answerKey) {
                    console.log(answer);
                    inp.classList.add("wrong");
                }
                });

            
        });   
});
*/


========================================================================
Тест с вопросами и ответами в объекте на JavaScript

В предыдущем уроке наши вопросы и ответы хранились в разных переменных. Такое разделение зачастую может быть не очень удобным. Давайте поработаем с другими вариантами хранения. 

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div id="test"></div>
    <button id="button">проверить ответы</button>

    <script src="script.js"></script>
</body>
</html>

"use strict"
//33
const questions = {
	'Вопрос 1?': 'ответ 1',
	'Вопрос 2?': 'ответ 2',
	'Вопрос 3?': 'ответ 3',
}

let parentDiv   = document.querySelector('#test');
let button   = document.querySelector('#button');

for (const [key, value] of Object.entries(questions)) {
    //console.log(`${key}: ${value}`);
    let div = document.createElement('div');
    let p = document.createElement('p');
    p.textContent = key;
    let input = document.createElement('input');
    input.dataset.right = value;
    div.appendChild(p);
    div.appendChild(input);
    parentDiv.appendChild(div);
}

let inputs = document.querySelectorAll('input');

button.addEventListener('click', function() {
    inputs.forEach(function (inp) {
            if (inp.value == inp.dataset.right) {
                console.log(inp.value);
                inp.classList.add("right");
            }
            if (inp.value != inp.dataset.right) {
                console.log(inp.value);
                inp.classList.add("wrong");
            }      
        });   
});

===============================
//33_2
let questions = [
	{
		text:  'вопрос 1?',
		right: 'ответ 1',
	},
	{
		text:  'вопрос 2?',
		right: 'ответ 2',
	},
	{
		text:  'вопрос 3?',
		right: 'ответ 3',
	},
];

let parentDiv   = document.querySelector('#test');
let button   = document.querySelector('#button');



questions.forEach(function (elem) {
    let div = document.createElement('div');
    let p = document.createElement('p');
    p.textContent = elem.text;
    let input = document.createElement('input');
    input.dataset.right = elem.right;
    div.appendChild(p);
    div.appendChild(input);
    parentDiv.appendChild(div);
});

let inputs = document.querySelectorAll('input');

button.addEventListener('click', function() {
    inputs.forEach(function (inp) {
            if (inp.value == inp.dataset.right) {
                console.log(inp.value);
                inp.classList.add("right");
            }
            if (inp.value != inp.dataset.right) {
                console.log(inp.value);
                inp.classList.add("wrong");
            }      
        });   
});

====================================================================
Тест с вариантами ответов в массиве на JavaScript

Пусть теперь у нас есть массив, в котором написаны номера правильных ответов для каждого вопроса:
let answers = [0, 1, 2];

То есть в первом элементе этого массива лежит номер правильного ответа первого вопроса, во втором элементе - для второго вопроса и так далее.

№1⊗jsPrTstAAV

Модифицируйте код предыдущего урока с учетом описанного.
====================================================================
"use strict"
//35
let answers = [0, 1, 2];
let inputs = document.querySelectorAll('input');
let button = document.querySelector('button');


let i = 0;
button.addEventListener('click', function() {
        answers.forEach(function(answer, key) {
                
                inputs.forEach(function (inp) {
                if (inp.getAttribute('name') == +key + 1) {
                    console.log(inp.getAttribute('name'));
                    if (inp.checked == true && answer == i) {
                    //console.log(inp.value);
                    inp.parentElement.classList.add("right");
                    }
                    if (inp.checked == true && answer != i) {
                    //console.log(inp.value);
                    inp.parentElement.classList.add("wrong");
                    }
                    if(i < 2) {
                        i++;
                    } else {
                        i = 0;
                    }
                    
                }      
            });       
        });  
});

==========================================================================
36
Тест с вопросами и вариантами ответов в объекте на JavaScript

Пусть теперь вопросы, варианты ответов и номера правильных ответов хранятся в одном объекте:
============================================================================

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div id="test"></div>
    <button id="button">проверить ответы</button> 
    <script src="script.js"></script>
</body>
</html>

---------------------------------------------

"use strict"
//36
let questions = [
	{
		text: 'вопрос 1?',
		right: 0,
		variants: [
			'вариант 1',
			'вариант 2',
			'вариант 3'
		]
	},
	{
		text: 'вопрос 2?',
		right: 1,
		variants: [
			'вариант 1',
			'вариант 2',
			'вариант 3'
		]
	},
	{
		text: 'вопрос 3?',
		right: 2,
		variants: [
			'вариант 1',
			'вариант 2',
			'вариант 3'
		]
	},
];

let parentDiv   = document.querySelector('#test');
let button   = document.querySelector('#button');

questions.forEach(function (obj, key) {
    let div = document.createElement('div');
    let p = document.createElement('p');
    p.textContent = obj.text;
    div.appendChild(p);
    let i = 0;
    obj.variants.forEach(function (variant) {
        console.log(i);
        let label = document.createElement('label');
        let input = document.createElement('input');
        input.type = 'radio';
        input.name = key;
        if (i == obj.right) {
            input.dataset.right = 1;
        } else {
            input.dataset.right = 0;
        }
        let span = document.createElement('span');
        span.textContent = variant;
        label.appendChild(input);
        label.appendChild(span);
        div.appendChild(label);
        i = +i + 1;
    });
    parentDiv.appendChild(div);
});

let inputs = document.querySelectorAll('input');

button.addEventListener('click', function() {
    inputs.forEach(function (inp) {
            //console.log('***');
            if (inp.dataset.right == true && inp.checked == true) {
                console.log(inp.checked);
                inp.parentElement.classList.add("right");
            }
            if (inp.dataset.right == false && inp.checked == true) {
                console.log(inp.checked);
                inp.parentElement.classList.add("wrong");
            }      
        });   
});

------------------------------------------
.right {
	background-color: green;
}
.wrong {
	background-color: red;
}
