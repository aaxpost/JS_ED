
№1⊗jsPmPrEChT
Дан массив. Выведите его элементы в виде списка ul.
№2⊗jsPmPrEChT
Модифицируйте предыдущую задачу так, чтобы по клику на любую li в ней появлялся инпут, с помощью которого ее можно будет поредактировать.
№3⊗jsPmPrEChT
Модифицируйте предыдущую задачу так, чтобы под списком был инпут, с помощью которого можно будет добавить новый элемент в конец списка ul. Сделайте так, чтобы новые li также можно было редактировать.
№4⊗jsPmPrEChT
Модифицируйте предыдущую задачу так, чтобы в конце каждой li стояла ссылка 'удалить', с помощью которой можно будет удалить эту li из ul.
№5⊗jsPmPrEChT
Модифицируйте предыдущую задачу так, чтобы в конце каждой li также стояла ссылка 'перечеркнуть', с помощью которой можно будет перечеркнуть текст данного тега li.
"use strict";

function func () {
    let input = document.createElement('input');
    input.value = this.innerText;
    this.innerText = '';
    this.appendChild(input);
    this.removeEventListener('click', func);
    let li = this;
    input.addEventListener('blur', function () {
        li.innerText = input.value;
        li.addEventListener('click', func);
        this.remove();    
    });  
}

function liFunc (li) {
    let href = document.createElement('a');
    href.href = '#';
    href.innerText = 'del';
    href.addEventListener('click', function() {
        li.remove();
    });
    li.appendChild(href);

    let href2 = document.createElement('a');
    href2.href = '#';
    href2.innerText = 'del2';
    href2.addEventListener('click', function() {
        li.querySelector('span').classList.add('through');
    });
    li.appendChild(href2);
}

let arr = [1,2,3];
let parent = document.querySelector('#parent');
let ul = document.createElement('ul');
parent.appendChild(ul);

for (let elem of arr) {
    let li = document.createElement('li');
    li.innerHTML = '<span>'+ elem;

    liFunc (li);
    
    li.querySelector('span').addEventListener('click', func);
    ul.appendChild(li);
}
let input2 = document.createElement('input');
input2.addEventListener('blur', function () {
    let li = document.createElement('li');
    li.innerHTML = '<span>'+ input2.value;

    liFunc (li);
   
    li.querySelector('span').addEventListener('click', func);
    input2.value = '';
    ul.appendChild(li);
})
parent.appendChild(input2);







**********************************************************
⊗jsPmPrRET
Оберните сначала текст абзаца в теги span, добавьте к этим тегам возможность редактирования, а затем добавьте в конец каждого абзаца ссылку на удаление. 
"use strict";

let pars = document.querySelectorAll('p');

console.log(pars);
for (let par of pars) {
	let span = document.createElement('span');
	span.textContent = par.textContent;
	span.addEventListener('click', function func() {
		let input = document.createElement('input');
		input.value = span.textContent;
		span.textContent = '';
		span.appendChild(input);
		input.addEventListener('blur', function(){
			span.textContent = input.value;
			span.addEventListener('click', func);
		});
		span.removeEventListener('click', func);
	});

	par.textContent = '';
	par.appendChild(span);
	let hrRemove = document.createElement('a');
	hrRemove.href = '#';
	hrRemove.textContent = 'remove';
	
	par.appendChild(hrRemove);
	hrRemove.addEventListener('click', function() {
		par.remove();
	});	
};


Добавьте в конец каждого абзаца ссылку, по клику на которую текст абзаца будет перечеркиваться (а ссылка - нет). 
let pars = document.querySelectorAll('p');

console.log(pars);
for (let par of pars) {
	let span = document.createElement('span');
	span.textContent = par.textContent;
	span.addEventListener('click', function func() {
		let input = document.createElement('input');
		input.value = span.textContent;
		span.textContent = '';
		span.appendChild(input);
		input.addEventListener('blur', function(){
			span.textContent = input.value;
			span.addEventListener('click', func);
		});
		span.removeEventListener('click', func);
	});

	par.textContent = '';
	par.appendChild(span);
	let hrRemove = document.createElement('a');
	hrRemove.href = '#';
	hrRemove.textContent = 'decoration';
	
	par.appendChild(hrRemove);
	hrRemove.addEventListener('click', function() {
		span.classList.add("line");
	});	
};


Модифицируйте предыдущую задачу так, чтобы после нажатия на ссылку эта ссылка удалялась из абзаца (а текст абзаца становился перечеркнутым). 
"use strict";

let pars = document.querySelectorAll('p');

console.log(pars);
for (let par of pars) {
	let span = document.createElement('span');
	span.textContent = par.textContent;
	span.addEventListener('click', function func() {
		let input = document.createElement('input');
		input.value = span.textContent;
		span.textContent = '';
		span.appendChild(input);
		input.addEventListener('blur', function(){
			span.textContent = input.value;
			span.addEventListener('click', func);
		});
		span.removeEventListener('click', func);
	});

	par.textContent = '';
	par.appendChild(span);
	let hrRemove = document.createElement('a');
	hrRemove.href = '#';
	hrRemove.textContent = 'decoration';
	
	par.appendChild(hrRemove);
	hrRemove.addEventListener('click', function() {
		span.classList.add("line");
		hrRemove.remove();
	});	
};

Модифицируйте предыдущую задачу так, чтобы первое нажатие по ссылке красило ряд в зеленый фон, а второе нажатие отменяло это действие.
"use strict";

let trs = document.querySelectorAll('table tr');

for (let tr of trs) {
	let td = document.createElement('td');
	let hr = document.createElement('a');
	hr.addEventListener('click', function() {
		tr.classList.toggle("green");
		});
	hr.href = '#';
	hr.textContent = 'decoration';
	td.appendChild(hr);
	tr.appendChild(td);
};


*************************************************************************************************************
// №6 ⊗jsPmPrEChT Дан следующий массив с работниками:
//Выведите этих работников в HTML таблице. 
// №7⊗jsPmPrEChT Добавьте ячейкам созданной таблицы возможность редактирования.
// №8⊗jsPmPrEChT Добавьте в вашу таблицу новую колонку со ссылкой на удаления ряда из таблицы.
// №9⊗jsPmPrEChT Сделайте под таблицей 3 инпута и кнопку для добавление нового работника. Пусть в инпуты вводятся имя, возраст и зарплата, и по нажатию на кнопку новый работник добавляется в таблицу. Реализуйте редактирование ячеек для вновь добавленных работников.
let employees = [
	{name: 'employee1', age: 30, salary: 400},
	{name: 'employee2', age: 31, salary: 500},
	{name: 'employee3', age: 32, salary: 600},
];

function func () {
    let input = document.createElement('input');
    input.value = this.innerText;
    this.innerText = '';
    this.appendChild(input);
    this.removeEventListener('click', func);
    let li = this;
    input.addEventListener('blur', function () {
        li.innerText = input.value;
        li.addEventListener('click', func);
        this.remove();    
    });  
}

function addElemDel (parent, elem) {
    let href = document.createElement('a');
    href.href = '#';
    href.innerText = 'del';
    href.addEventListener('click', function() {
        parent.remove();
    });
    elem.appendChild(href);
}

let parent = document.querySelector('#parent');
let table = document.createElement('table');
let tr = document.createElement('tr');
	 for (let key in employees[0]) {
			let th = document.createElement('th');
			th.innerText = key;
			tr.appendChild(th);
	 }
table.appendChild(tr);
for (let employee of employees) {
	let tr = document.createElement('tr');
	 for (let key in employee) {
		let th = document.createElement('th');
		th.innerText = employee[key];
		th.addEventListener('click', func);
		tr.appendChild(th);
	 }
	 let th = document.createElement('th');
	 addElemDel (tr, th);
	 tr.appendChild(th);
	 table.appendChild(tr);
}
parent.appendChild(table);

let button = document.querySelector('button');
let inputName = document.querySelector('#name');
let inputAge = document.querySelector('#age');
let inputSalary = document.querySelector('#salary');
button.addEventListener('click', function() {
	let tr = document.createElement('tr');
	let thName = document.createElement('th');
	thName.innerText = inputName.value;
	thName.addEventListener('click', func);
	tr.appendChild(thName);
	let thAge = document.createElement('th');
	thAge.innerText = inputAge.value;
	thAge.addEventListener('click', func);
	tr.appendChild(thAge);
	let thSalary = document.createElement('th');
	thSalary.innerText = inputSalary.value;
	thSalary.addEventListener('click', func);
	tr.appendChild(thSalary);
	let thDel = document.createElement('th');
	addElemDel (tr, thDel);
	tr.appendChild(thDel);
	table.appendChild(tr);
});

***********************************************************************************************************************************
'use strict'
Практика на изменение элементов на JavaScript
//  №10⊗jsPmPrEChT Дан следующий массив с работниками: 
// Выведите на экран каждого работника в своем теге li тега ul.
//№11⊗jsPmPrEChT Сделайте так, чтобы по клику на имя, возраст или зарплату работника появлялся инпут для редактирования этого поля.
// №12⊗jsPmPrEChT Добавьте в конец каждого тега li ссылку на удаление этого li из списка.
// №13⊗jsPmPrEChT Под списком сделайте форму для добавления нового работника.

let employees = [
	{name: 'employee1', age: 30, salary: 400},
	{name: 'employee2', age: 31, salary: 500},
	{name: 'employee3', age: 32, salary: 600},
];

function func () {
    let input = document.createElement('input');
    input.value = this.innerText;
    this.innerText = '';
    this.appendChild(input);
    this.removeEventListener('click', func);
    let item = this;
    input.addEventListener('blur', function () {
        item.innerText = input.value;
        item.addEventListener('click', func);
        this.remove();    
    });  
}

function addElemDel (parent, elem) {
    let href = document.createElement('a');
    href.href = '#';
    href.innerText = 'del';
    href.addEventListener('click', function() {
        parent.remove();
    });
    elem.appendChild(href);
}

function createElLi (obj, ul, addElemDel) {
	let li = document.createElement('li');
	for (let key in obj) {
		let pKey = document.createElement('span');
		pKey.innerText = "  " + key + ': ';
		li.appendChild(pKey);
		let span = document.createElement('span');
		span.innerText = obj[key];
		span.addEventListener('click', func);
		li.appendChild(span);	
	}
	addElemDel(li, li);
	return ul.appendChild(li);
}

let parent = document.querySelector('#parent');
let ul = document.createElement('ul');
for (let employee of employees) {
	createElLi (employee, ul, addElemDel);
}
parent.appendChild(ul);

let button = document.querySelector('button');
let inputName = document.querySelector('#name');
let inputAge = document.querySelector('#age');
let inputSalary = document.querySelector('#salary');
let newEmployee = {name: inputName.value, age: inputAge.value, salary: inputSalary.value};
button.addEventListener('click', function() {
	createElLi (newEmployee, ul, addElemDel);
});


************************************************************************************************
//Игра угадай ячейку на JavaScript
<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8">
		<title></title>
		<link rel="stylesheet" href="styles.css">
	</head>
	<body>
		<div id="parent">
			<input class="btn" type="button" value='START'>
			<p class="result"></p>
		</div>
		
		
		
		<script src="script.js?v=5"></script>
	</body>
</html>


'use strict'

function getMinOfArray(numArray) {
	return Math.min.apply(null, numArray);
  }

function getRandomInt(max) {
	return Math.floor(Math.random() * max);
  }

function createArrNum() {
	let arr = [];
	for (let i = 1; i <= 100; i++) {
		if (i <= 10) {
			arr.push('mem');
		} else {
			arr.push('zero');
		}
	}
	return arr;
}

let btn = document.querySelector('.btn');
btn.addEventListener('click', function () {
	
	let arr = createArrNum();
	let shuffle = arr.sort(() => Math.random() - 0.5);
	let parent = document.querySelector('#parent');
	let table = document.createElement('table');
	for (let i = 1; i < 11; i++) {
		let tr = document.createElement('tr');
		for (let j = 1; j < 11; j++) {
			let th = document.createElement('th');
			th.classList.add(shuffle.shift());
			th.addEventListener('click', function funcMem() {
				if (this.classList.contains('mem')) {
					this.classList.add('true');
				} else {
					this.classList.add('error');
				}	
			});
			th.textContent = '';
			tr.appendChild(th);
		}
		table.appendChild(tr);
	}
	
	parent.appendChild(table);

	let i = 0;
	let p = document.querySelector('.result');
	let timerId = setInterval(function() {
	p.textContent = ++i;
	if (i >= 10) {
		clearInterval(timerId);
		let th = document.querySelectorAll('th');
		for (let elem of th) {
			elem.removeEventListener('click', funcMem);
		}	
	}
	}, 1000);
	
});

const array1 = [1, 2, 3];

console.log(array1.includes(2));
// Expected output: true

const pets = ['cat', 'dog', 'bat'];

console.log(pets.includes('cat'));
// Expected output: true

console.log(pets.includes('at'));
// Expected output: false

var fruit = ["арбузы", "бананы", "Вишня"];
fruit.sort(); // ['Вишня', 'арбузы', 'бананы']

var scores = [1, 2, 10, 21];
scores.sort(); // [1, 10, 2, 21]

var things = ["слово", "Слово", "1 Слово", "2 Слова"];
things.sort(); // ['1 Слово', '2 Слова', 'Слово', 'слово']
// В Unicode, числа находятся перед буквами в верхнем регистре,
// а те, в свою очередь, перед буквами в нижнем регистре.

